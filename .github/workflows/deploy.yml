name: Deploy to GitHub Pages

on:
  workflow_call:
    secrets:
      SECRET_GITHUB_TOKEN:
        required: true
  push:
    branches:
      - main

  workflow_dispatch:

    # Review gh actions docs if you want to further define triggers, paths, etc
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on
permissions:
  contents: write # Ensure permissions to write to repository content
  packages: write # Ensure permissions to upload release assets

jobs:
  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: getappsh/docs # Explicitly check out the target repo
          token: ${{ secrets.SECRET_GITHUB_TOKEN }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Open-Api Docs
        run: |
          yarn docusaurus clean-api-docs all
          yarn docusaurus gen-api-docs all

      - name: Generate ENV Docs
        run: |
          yarn docusaurus clear-env-docs
          yarn docusaurus gen-env-docs

      - name: Build website
        run: yarn build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

      - name: Get current date and time
        id: get_datetime
        run: echo "RELEASE_TAG=v1-$(date +'%d-%m-%Y_%H%M')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: "Release ${{ env.RELEASE_TAG }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Zip Build Files
        run: zip -r build.zip build

      - name: Upload Build Files to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build.zip
          asset_name: build.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  deploy:
    name: Deploy to GitHub Pages
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build_and_push_image:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure all tags are fetched

      - name: Get current date and time
        id: get_datetime
        run: echo "RELEASE_TAG=v1-$(date +'%d-%m-%Y')" >> $GITHUB_ENV

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: harbor.getapp.sh
          username: "${{ secrets.REGISTRY_USERNAME }}"
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: harbor.getapp.sh/getapp-dev/docs:${{ env.RELEASE_TAG }}
          push: true
